/*!
 * 质数
 *
 * 质数的讨论范围限定在非零自然数(Z+)中。
 * 所以 0 不是质数。
 *
 * 1不是质数: 质数是运用乘法构造新的数字时所使用的基本构件。
 * 而1不是一个很好的基本构件。
 *
 */

/**
 * 判断一个数是否是质数
 */
function isPrime(n) {

    // 1 < n <= 3
    // 这里 n 只能是 2, 3
    if (n <= 3)
        return n > 1;

    // (前提 n > 3)
    // 检测 n 是否含有因数 2 或者 3
    if (n % 2 == 0 || n % 3 == 0)
        return false;

    // 如果 a 不是 n 的因数，那么 a 的倍数也不可能是 n 的因数
    //
    // 设 b = ai (i is Z+)
    // 假设 b 是 n 的因数，则有 n = bx (x is Z+)
    // 则可推出 n = (ai)x = a(ix)
    // 则可推出 a 也是 n 的因数。
    // 因此，a 的倍数 b 也不会是 n 的因数。
    //
    // 接下来，我们将 2, 3 的倍数排除
    //
    // 2 和 3 的最小公倍数是 6
    //
    // ----------------------------------------
    //     4 | 5 6 7 8 9 10 | 11 12 13 14 15 16
    // 2*  x | - x - x -  x |  -  x  -  x  -  x
    // 3*  - | - x - - x  - |  -  x  -  -  x  -
    // All x | - x - x x  x |  -  x  -  x  x  x
    // ----------------------------------------
    //
    // 我们将上表中 2 的倍数和 3 的倍数都标记 X，它们都
    // 已经被否定掉了，不可能是 n 的因数。
    //
    // 那么还有剩下未被尝试的是 5,7,11,13,17,19...
    //
    for (var i = 5; i * i <= n; i += 6) {
        
        if (n % i == 0 || n % (i + 2) == 0)
            return false;
    }

    return true;
}


